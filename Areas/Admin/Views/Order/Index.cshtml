@{
    //Razor Code --> C#
    //Query["status"] --> status chính là status trong asp-route-status="pending"
    var status = Context.Request.Query["status"]; //Lấy query parameter từ url. VD: GET../admin/order/index?status=inprocess --> biến status = "inprocess"
    var inprocess = "text-primarty";
    var pending = "text-primarty";
    var completed = "text-primarty";
    var approved = "text-primarty";
    var all = "text-primarty";

    switch (status)
    {
        case "inprocess":
            inprocess = "active text-white bg-primary";
            break;
        case "pending":
            pending = "active text-white bg-primary";
            break;
        case "completed":
            completed = "active text-white bg-primary";
            break;
        case "approved":
            approved = "active text-white bg-primary";
            break;
        case "all":
            all = "active text-white bg-primary";
            break;
        default:
            break;
    }

}

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Order List</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="d-flex justify-content-between pb-5 pt-2">
            <span></span>
            <ul class="list-group list-group-horizontal-sm">
                @*Comment: asp-route-[tên tự đặt]: *@
                @*Comment: [tên tự đặt]: bắt buộc phải giống với tên parameter của method Edit (method sử dụng cho View)*@
                @*Comment: asp-route-id: truyền đối số (argument) tên id có giá trị là ID của category vào method Edit/Delete (method sử dụng cho View) khi nhấn Edit/Delete *@
                @*Comment: asp-route-status="inprocess": gán query parameter vào url: GET../admin/order/index?status=inprocess *@
                @*Comment: thẻ a mặc định là GET *@
                @*Comment: @inprocess trong thẻ a --> sử dụng biến từ đoạn code razor *@

                <a style="text-decoration:none" asp-controller="Order" asp-action="Index" asp-route-status="inprocess">
                <li class="list-group-item active @inprocess">In Process</li>
                </a>
                <a style="text-decoration:none" asp-controller="Order" asp-action="Index" asp-route-status="pending">
                <li class="list-group-item @pending">Payment Pending</li>
                </a>
                <a style="text-decoration:none" asp-controller="Order" asp-action="Index" asp-route-status="completed">
                <li class="list-group-item @completed">Completed</li>
                </a>
                <a style="text-decoration:none" asp-controller="Order" asp-action="Index" asp-route-status="approved">
                <li class="list-group-item @approved">Approved</li>
                </a>
                <a style="text-decoration:none" asp-controller="Order" asp-action="Index" asp-route-status="all">
                <li class="list-group-item @all">All</li>
                </a>
            </ul>
        </div>
        @* Sử dụng thư viện để render table --> dữ liệu json sẽ được lấy thông qua đoạn ajax trong code js *@
        @* Vì sử dụng thư viện để render table nên không cần dùng @model List<OrderViewModel> *@
        @* id = tblData vì trong đoạn script ghi $('#tblData').DataTable... *@
        @* Script code js được import trong @section Scripts *@
        <table id="tblData" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Phone Number</th>
                    <th>Email</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
        </table>

    </div>
</div>


@section Scripts {
    @* import js *@
    <script src="~/js/order.js"></script>
}